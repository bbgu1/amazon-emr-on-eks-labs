    apiVersion: flink.apache.org/v1beta1
    kind: FlinkDeployment
    metadata:
      name: emr-on-eks-java-app
    spec:
      flinkConfiguration:
        taskmanager.numberOfTaskSlots: "2"
        state.checkpoints.dir: s3:///flink-eks/checkpoints/
        state.savepoints.dir: s3:///flink-eks/savepoints/
        kubernetes.operator.job.autoscaler.enabled: true
        kubernetes.operator.job.autoscaler.stabilization.interval: 1m
        kubernetes.operator.job.autoscaler.metrics.window: 5m
        kubernetes.operator.job.autoscaler.target.utilization: 0.6
        kubernetes.operator.job.autoscaler.target.utilization.boundary: 0.2
        kubernetes.operator.job.autoscaler.restart.time: 2m
        kubernetes.operator.job.autoscaler.catch-up.duration: 5m
      flinkVersion: v1_20
      executionRoleArn: arn:aws:iam::212097672561:role/emr-flink-lab-role
      emrReleaseLabel: "emr-7.9.0-flink-latest"
      image: 212097672561.dkr.ecr.us-east-1.amazonaws.com/eks-flink:emr-7.9.0-java-1.0.6-20250916
      jobManager:
        storageDir: s3://emr-eks-workshop-212097672561/flink-eks/ha/
        resource:
          memory: "2048m"
          cpu: 1
      taskManager:
        resource:
          memory: "2048m"
          cpu: 1
      job:
        # if you have your job jar in S3 bucket you can use that path as well
        jarURI: local:///usr/lib/flink/lib/emr-eks-flink-java-1.0.6.jar
        args:
            - ExampleInputStream
            - us-east-1
            - s3://emr-eks-workshop-212097672561/flink-data/s3_sink_agg_1min/
        parallelism: 2
        upgradeMode: savepoint
        savepointTriggerNonce: 0
      monitoringConfiguration:
        cloudWatchMonitoringConfiguration:
          logGroupName: /aws/emr-eks/flink
